openapi: 3.0.0
info:
  version: 1.0.0
  title: Gonggacksim 1.0v API docs
  description: 공각심 API 문서
  license:
    name: MIT
servers:
  - url: "http://localhost:3000/"
paths:
  /oauth2/refresh-token:
    post:
      summary: SNS 토큰 갱신 API
      description: 만료된 액세스 토큰을 갱신합니다.
      tags:
        - OAuth
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "토큰이 성공적으로 갱신되었습니다."
        "404":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "인증이 필요합니다."
        "400":
          description: 토큰 갱신 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "반환된 토큰이 없습니다."
  /oauth2/login:
    get:
      summary: 로그인 API
      description: 사용자 로그인을 처리합니다. //swagger에서는 불가능함
      tags:
        - OAuth
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그인 완료"
        "500":
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: "login_error"
                  reason:
                    type: string
                    example: "로그인 실패"
  /oauth2/logout:
    post:
      summary: SNS 로그아웃 API
      description: 사용자 로그아웃을 처리합니다.
      tags:
        - OAuth
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 로그아웃 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "로그아웃 성공."
                  snsLogoutUrl:
                    type: string
                    example: "https://accounts.google.com/Logout?continue=http://localhost:3000/oauth2/login/google"
        "500":
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  reason:
                    type: string
                    example: "로그아웃 실패"
  /oauth2/delete-account:
    post:
      summary: 회원탈퇴 API
      description: 사용자 회원탈퇴를 처리합니다.
      tags:
        - OAuth
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 회원탈퇴 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "회원탈퇴 완료"
        "500":
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "회원탈퇴 실패"
  /oauth2/consent:
    post:
      summary: 이용약관 동의 API
      description: 이용약관 동의를 처리했습니다.
      tags:
        - OAuth
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 이용약관 동의 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "이용약관 동의 완료"
        "500":
          description: 서버 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "이용약관 동의 실패"
  /api/v1/users/user-info:
    post:
      summary: 사용자 정보 수집 API
      description: 사용자 정보를 수집합니다.
      tags:
        - User
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: integer
                department:
                  type: string
                grade:
                  type: string
                category:
                  type: array
                  items:
                    type: string
                employmentStatus:
                  type: string
                employCategory:
                  type: string
              example:
                age: 25
                department: "소프트웨어학과"
                grade: "졸업"
                category: ["디자인/예술", "IT/개발"]
                employmentStatus: "재직 중"
                employCategory: "전산"
      responses:
        "200":
          description: 정보 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "update success."
                  updatedConsent:
                    type: object
                    properties:
                      age:
                        type: integer
                      department:
                        type: string
                      grade:
                        type: string
                      category:
                        type: array
                        items:
                          type: string
                      employmentStatus:
                        type: string
                      employCategory:
                        type: string
                    example:
                      age: 25
                      department: "소프트웨어학과"
                      grade: "졸업"
                      category: ["디자인/예술", "IT/개발"]
                      employmentStatus: "재직 중"
                      employCategory: "전산"
        "400":
          description: 정보 업데이트 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 정보 저장 중 오류가 발생했습니다."              
  
  /api/v1/users/suggest-info:
    get:
      summary: 유사 사용자 시험 추천 API
      description: 유사 사용자 시험 추천
      tags:
        - User
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 시험 추천 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "시험 추천 성공입니다."
                  updatedConsent:
                    type: object
                    properties:
                      Certification:
                        type: array
                        items:
                          type: string
                    example:
                      Certification: ["TOEIC, 컴퓨터활용 1급"]
        "400":
          description: 유사 사용자 시험 추천 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "유사 사용자 시험 추천 중 실패했습니다."
  /api/v1/users/mypage:
    get:
      summary: 마이페이지 조회 API
      description: 사용자 정보 일부를 반환합니다.
      tags:
        - User
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 응답 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "마이페이지 조회 완료"
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        exmaple: "홍길동"
                      profileImage:
                        type: string
                        example: "https://example.com/profile.jpg"
                      categories:
                        type: array
                        items:
                          type: string
                          example: ["프로그래밍", "데이터 분석"]
                      closestExams:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              example: "정보처리기사"
                            date:
                              type: string
                              example: "2025-02-15T00:00:00.000Z"
                            dDay:
                              type: number
                              example: 20
        "400":
          description: 응답 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "마이페이지 조회 실패"
  /api/v1/users/help:
    get:
      summary: 도움말 조회 API
      description: 도움말 페이지가 조회됩니다. //swagger에서는 불가능함
      tags:
        - User
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 응답 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "도움말 조회 완료"
        "400":
          description: 응답 에러
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "도움말 조회 실패"                  
  /api/v1/users/mypage/user-edit:
    patch:
      summary: 사용자 정보 수정 API
      description: 사용자 정보를 수정합니다.
      tags:
        - User
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                age:
                  type: integer
                department:
                  type: string
                grade:
                  type: string
                category:
                  type: array
                  items:
                    type: string
                employmentStatus:
                  type: string
                employCategory:
                  type: string
              example:
                age: 25
                department: "소프트웨어학과"
                grade: "졸업"
                category: ["디자인/예술", "IT/개발"]
                employmentStatus: "재직 중"
                employCategory: "전산"
      responses:
        "200":
          description: 정보 업데이트 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "update success."
                  updatedConsent:
                    type: object
                    properties:
                      age:
                        type: integer
                      department:
                        type: string
                      grade:
                        type: string
                      category:
                        type: array
                        items:
                          type: string
                      employmentStatus:
                        type: string
                      employCategory:
                        type: string
                    example:
                      age: 25
                      department: "소프트웨어학과"
                      grade: "졸업"
                      category: ["디자인/예술", "IT/개발"]
                      employmentStatus: "재직 중"
                      employCategory: "전산"
        "400":
          description: 정보 업데이트 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "사용자 정보 저장 중 오류가 발생했습니다."
  /api/v1/certifications:
    get:
      summary: 자격증 전체 목록 조회 API
      description: 전체 자격증 조회
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 전체 목록 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "조회 성공입니다."
        "400":
          description: 목록 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "조회 실패했습니다."
  /api/v1/certifications/category/{category}:
    get:
      summary: 카테고리별 자격증 조회 API
      description: 자격증 카테고리별 조회
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: ccategory
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "조회 성공입니다."
        "400":
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "조회 실패했습니다."
  /api/v1/certifications/{certificationId}:
    get:
      summary: 자격증 상세 조회 API
      description: 자격증 상세 내용 조회
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: certificationId
          required: true
          schema:
            type: integer
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "조회 성공입니다."
        "400":
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "조회 실패했습니다."
  /api/v1/certifications/{certificationId}/schedules:
    get:
      summary: 접수기간 조회 API
      description: 시험별 접수 기간 조회
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: certificationId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "조회 성공입니다."
        "400":
          description: 조회 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "조회 실패했습니다."
  /api/v1/certifications/{certificationId}/notifications:
    post:
      summary: 접수 알림 신청 API
      description: 시험 접수 알림 신청 기능
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: certificationId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 알림신청 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "알림신청 성공입니다."
        "400":
          description: 알림신청 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "알림신청 실패했습니다."
  /api/v1/certifications/{certificationId}/apply:
    get:
      summary: 시험 접수 API
      description: 시험 접수 기능
      tags:
        - Certification
      parameters:
        - in: query
          name: provider
          required: true
          schema:
            type: string
        - in: path
          name: certificationId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        "200":
          description: 접수 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "조회 성공입니다."
        "400":
          description: 접수 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "조회 실패했습니다."
  /api/v1/certifications/search:
    get:
      summary: 자격증 검색 API
      description: 자격증 목록 검색 기능
      tags:
        - Certification
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: query
          required: true
          description: 검색하고자 하는 자격증 이름의 부분 문자열 (한 글자씩 검색 가능)
          schema:
            type: string
          example: "컴"
        - in: query
          name: category
          required: false
          description: 자격증 카테고리. (기본값 - 전체)
          schema:
            type: string
          example: "전산"
      responses:
        "200":
          description: 검색 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "검색 성공입니다."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 10
                        name:
                          type: string
                          example: "컴퓨터활용능력 1급필기"
                        category:
                          type: string
                          example: "전산/IT"
        "400":
          description: 검색 실패 잘못된 요청 - 필수 파라미터 누락 or 유효하지 않은 값)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "검색 실패했습니다."
          "401":
            description: 인증 실패
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      description: 요청 성공 여부
                      example: false
                    message:
                      type: string
                      description: 에러 메시지
                      example: "Unauthorized"
  /api/v1/notification/settings:
    post:
      summary: 방해금지 시간대 설정 API
      description: 방해 금지 시간대 설정 (최대 7개)
      tags:
        - Notification
      security:
        - BearerAuth: []
      requestBody:
        description: 방해 금지 설정 관련 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 사용자 ID
                  example: 1
                fcmToken:
                  type: string
                  description: Firebase Cloud Messaging 토큰
                  example: "CLIENT_FCM_TOKEN"
                dndTimes:
                  type: array
                  description: 방해 금지 시간대 리스트
                  items:
                    type: object
                    properties:
                      days:
                        type: array
                        items:
                          type: string
                        example: ["월", "화", "수", "목", "금"]
                      startTime:
                        type: string
                        example: "09:00"
                      endTime:
                        type: string
                        example: "15:00"
                selectedExams:
                  type: array
                  items:
                    type: string
                  example: ["TOEIC", "JPT"]
                quizTypes:
                  type: array
                  items:
                    type: string
                  example: ["받아적기"]
                quizRanges:
                  type: array
                  items:
                    type: object
                    properties:
                      certificationId:
                        type: integer
                        example: 1
                      quizRange:
                        type: array
                        items:
                          type: object
                          properties:
                            quizRangeId:
                              type: integer
                              example: 101
                            rangeTitle:
                              type: string
                              example: "파트1: 개념"
                            rangeDetails:
                              type: string
                              example: "기초 개념 설명"
      responses:
        "200":
          description: 설정 저장 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Notification settings saved successfully"
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      dndTimes:
                        type: array
                        items:
                          type: object
                          properties:
                            days:
                              type: array
                              items:
                                type: string
                              example: ["월", "화", "수", "목", "금"]
                            startTime:
                              type: string
                              example: "09:00"
                            endTime:
                              type: string
                              example: "15:00"
                      selectedExams:
                        type: array
                        items:
                          type: string
                        example: ["컴활2급", "워드"]
                      quizTypes:
                        type: array
                        items:
                          type: string
                        example: ["받아적기"]
                      quizRanges:
                        type: array
                        items:
                          type: object
                          properties:
                            certificationId:
                              type: integer
                              example: 1
                            quizRange:
                              type: array
                              items:
                                type: object
                                properties:
                                  quizRangeId:
                                    type: integer
                                    example: 101
                                  rangeTitle:
                                    type: string
                                    example: "파트1: 개념"
                                  rangeDetails:
                                    type: string
                                    example: "기초 개념 설명"
      "400":
        description: 조회 실패 (잘못된 요청)
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Invalid request data."
      "401":
        description: 인증 실패 (Unauthorized)
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "error"
                message:
                  type: string
                  example: "Unauthorized Access"

  /api/v1/schedule/recommendation:
    post:
      summary: Open AI 시험 일정 추천 API
      description: gpt Open AI를 통해 시험 일정을 추천하는 기능
      tags:
        - Schedule
      security:
        - BearerAuth: []
      requestBody:
        description: AI로부터 추천받기 위한 사용자의 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  description: 사용자 ID
                  example: 1
                name:
                  type: string
                  description: 시험 이름
                  example: "TOEIC"
                studyExperience:
                  type: string
                  description: 사용자 학습 경험
                  example: "중급"
                studyTimePerDay:
                  type: string
                  description: 하루 학습 가능 시간
                  example: "3~4시간"
                studyFrequency:
                  type: string
                  description: 하루 학습 빈도
                  example: "매일 조금씩"
                examGoal:
                  type: string
                  description: 시험 목표
                  example: "800+"
      responses:
        "200":
          description: 추천 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Exam schedule successfully recommended"
                  data:
                    type: object
                    properties:
                      userId:
                        type: integer
                        example: 1
                      recommendedPlan:
                        type: string
                        example: "2주 완성 학습 플랜"
                      examDate:
                        type: string
                        format: date-time
                        example: "2025-12-08T15:00:00Z"

        "400":
          description: 추천 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "추천 실패했습니다."

  /api/v1/calander/exams:
    post:
      summary: 캘린더 사용자 시험 추가 API
      description: 사용자 개인 시험 정보를 캘린더에 추가하는 기능 제공.
      tags:
        - Exam
      security:
        - BearerAuth: []
      requestBody:
        description: 캘린더에 추가할 시험 정보
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 시험의 이름
                  example: 테스트 시험
                examDate:
                  type: string
                  format: date-time
                  description: ISO 8601 형식의 시험 날짜 및 시간
                  example: 2025-01-31T10:00:00Z
                examRange:
                  type: string
                  description: 시험의 범위
                  example: 테스트 범위
                memo:
                  type: string
                  description: 시험에 대한 추가적인 메모
                  example: 테스트 1회독
                status:
                  type: string
                  description: 시험 준비 상태 (진척도)
                  example: 20%
                userId:
                  type: integer
                  description: 시험을 추가하는 사용자의 ID
                  example: 1
                remindState:
                  type: boolean
                  description: 리마인드 알림 설정 여부
                  example: true
                fcmToken:
                  type: string
                  description: Firebase Cloud Messaging 토큰
                  example: USER_FCM_TOKEN
      responses:
        "200":
          description: 시험 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  resultType:
                    type: string
                    description: 처리 결과 유형
                    example: SUCCESS
                  success:
                    type: object
                    description: 추가된 시험 정보
        "400":
          description: 시험 추가 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "시험 추가 실패했습니다."
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 요청 성공 여부
                    example: false
                  message:
                    type: string
                    description: 에러 메시지
                    example: "Unauthorized"
    get:
      summary: 캘린더 사용자 시험 조회 API
      description: 특정 사용자의 시험 목록을 조회하는 API
      tags:
        - Exam
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: userId
          required: true
          schema:
            type: integer
          description: 조회하려는 사용자의 ID
      responses:
        "200":
          description: 성공적으로 시험 목록을 반환합니다
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    description: 시험 목록 데이터
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: SQLD
                        examDate:
                          type: string
                          format: date-time
                          example: 2025-01-15T10:00:00Z
                        examRange:
                          type: string
                          example: MySQL
                        memo:
                          type: string
                          example: mysql 공부하기
                        status:
                          type: string
                          example: 40%
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "User ID is required"
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 요청 성공 여부
                    example: false
                  message:
                    type: string
                    description: 에러 메시지
                    example: "Unauthorized"
  /api/v1/calander/exams/{examId}:
    delete:
      summary: 캘린더 시험 삭제 API
      description: 캘린더에 등록된 시험 삭제 기능
      tags:
        - Exam
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: examId
          required: true
          schema:
            type: integer
          description: 삭제하려는 시험의 ID
          example: 1
        - in: query
          name: userId
          required: true
          schema:
            type: integer
          description: 삭제하려는 시험의 사용자 ID
          example: 1
      responses:
        "200":
          description: 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 요청 성공 여부
                    example: true
                  message:
                    type: string
                    description: 응답 메세지
                    example: "Exam deleted successfully"
        "400":
          description: 삭제 실패 (잘못된 요청 - 필수 파라미터 누락 or 유효하지 않은 값)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    description: 요청 성공 여부
                  message:
                    type: string
                    example: "삭제 실패했습니다."
                    description: 에러메세지
        "401":
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: 요청 성공 여부
                    example: false
                  message:
                    type: string
                    description: 에러 메시지
                    example: "Unauthorized"
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  # schemas:
  #   User:
  #     type: object
  #     properties:
  #       id:
  #         type: integer
  #         example: 1
  #       name:
  #         type: string
  #         example: John Doe
  #       email:
  #         type: string
  #         example: user@example.com
  #       profileImage:
  #         type: string
  #         example: 'https://example.com/profile.jpg'
